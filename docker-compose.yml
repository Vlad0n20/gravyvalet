version: "3.8"

services:

  gravyvalet:
    build:
      context: .
      target: gv-dev
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8004
    environment: &gv_environment
      DEBUG: 1
      DJANGO_SETTINGS_MODULE: app.settings
      PYTHONUNBUFFERED: 1
      POSTGRES_HOST: postgres
      POSTGRES_DB: gravyvalet
      POSTGRES_USER: postgres
      # OSFDB_HOST: 192.168.168.167
      ALLOWED_HOSTS: 0.0.0.0,localhost,192.168.168.167
      CORS_ALLOWED_ORIGINS: http://localhost:5000,http://192.168.168.167:5000
      SECRET_KEY: so-secret
      OSF_BASE_URL: "http://192.168.168.167:5000"
      OSF_API_BASE_URL: "http://192.168.168.167:8000"
      OSF_AUTH_COOKIE_NAME: osf
      AMQP_BROKER_URL: "amqp://guest:guest@rabbitmq:5672"
      GRAVYVALET_ENCRYPT_SECRET: "this is fine"
    ports:
      - 8004:8004
    stdin_open: true
    volumes:
      - ./:/code:cached
    depends_on:
      - celeryworker
      - postgres

  celeryworker:
    build:
      context: .
      target: gv-local
    restart: unless-stopped
    command: /usr/local/bin/celery --app app worker --uid daemon -l INFO
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - ./:/code:cached
    environment: *gv_environment
    stdin_open: true

  postgres:
    image: postgres:latest
    volumes:
      - "${POSTGRES_DATA_VOL:-postgres_data_vol}:/var/lib/postgresql/data/"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: gravyvalet
    ports:
      - 5435:5432

  rabbitmq:
    image: rabbitmq:management
    ports:
      - 15674:15672
    volumes:
      - rabbitmq_vol:/var/lib/rabbitmq
    stdin_open: true



volumes:
  postgres_data_vol:
    external: false
  rabbitmq_vol:
    external: false
